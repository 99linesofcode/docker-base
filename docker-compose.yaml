services:
  devcontainer:
    build:
      args:
        - PUID=${PUID:-1000}
        - PGID=${PGID:-1000}
        - TZ=${TIMEZONE:-Europe/Amsterdam}
      context: .
      dockerfile: ./devcontainer/Dockerfile
      # See https://docs.docker.com/compose/compose-file/build/#ssh
      ssh:
        - default # lets the builder connect to the default SSH agent
    container_name: ${APP_NAME}-devcontainer
    extra_hosts:
      - "host.docker.internal:host-gateway" # for accessing the host from inside the container
    tty: true
    working_dir: /app

  meilisearch:
    container_name: ${APP_NAME}-meilisearch
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--spider",
          "http://localhost:7700/health",
        ]
      timeout: 5s
      retries: 3
    image: getmeili/meilisearch:latest
    ports:
      - ${FORWARD_MEILISEARCH_PORT:-7700}:7700
    restart: unless-stopped

  mysql:
    container_name: ${APP_NAME}-mysql
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      timeout: 5s
      retries: 3
    image: mysql/mysql-server:8.0
    ports:
      - ${FORWARD_DB_PORT:-3306}:3306
    restart: unless-stopped

  # FIXME: serve different urls for process.browser and SSR to avoid CORS issues when SSR
  # FIXME: dont volume mount /node_modules to drastically improve performance
  nodejs:
    command: npm run dev
    container_name: ${APP_NAME}-nodejs
    environment:
      - NODE_ENV=${APP_ENV:-development}
      - NUXT_HOST=nodejs
      - NUXT_PORT=${FORWARD_NODE_PORT:-3000}
    extra_hosts:
      - host.docker.internal:host-gateway
    image: node:alpine
    ports:
      - ${FORWARD_NODE_PORT:-3000}:3000
      - ${FORWARD_VITE_PORT:-24678}:24678
    restart: unless-stopped
    user: node
    working_dir: /var/www/html

  phpmyadmin:
    container_name: ${APP_NAME}-phpmyadmin
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - PMA_HOST=${APP_NAME}-mysql
      - PMA_PMADB=phpmyadmin
      - UPLOAD_LIMIT=512M
    healthcheck:
      test: ["CMD", "curl", "-Ss", "http://localhost/robots.txt"]
      timeout: 5s
      retries: 3
    image: phpmyadmin:latest
    ports:
      - ${FORWARD_PHPMYADMIN_PORT:-8888}:80
    restart: unless-stopped

  redis:
    container_name: ${APP_NAME}-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 3
    image: redis:alpine
    ports:
      - ${FORWARD_REDIS_PORT:-6379}:6379
    restart: unless-stopped
